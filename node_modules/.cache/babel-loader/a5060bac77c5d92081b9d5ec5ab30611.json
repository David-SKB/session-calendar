{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\context\\\\ContextWrapper.js\";\nimport React, { useContext, useState, useEffect, useReducer, useMemo } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport { getAllEvents } from \"../services/EventService\";\nimport dayjs from \"dayjs\";\nimport axios from 'axios';\nimport Day from \"../components/Day\";\n//import api from \"../services/api\";\n\nfunction savedEventsReducer(state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  console.log(\"STATE: \" + state);\n  console.log(\"TYPE: \" + type);\n  console.log(\"PAYLOAD: \" + payload);\n  switch (type) {\n    case \"push\":\n      return [].concat(_toConsumableArray(state), [payload]);\n    case \"update\":\n      return state.map(function (evt) {\n        return evt.id === payload.id ? payload : evt;\n      });\n    case \"load\":\n      return payload;\n    case \"delete\":\n      return state.filter(function (evt) {\n        return evt.id !== payload.id;\n      });\n    default:\n      throw new Error();\n  }\n}\nfunction loadData() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    event_list = _useState2[0],\n    setEvents = _useState2[1];\n  useEffect(function () {\n    setEvents(function (event_list) {\n      return event_list;\n    });\n  }, []); // <- add empty brackets here\n\n  return {\n    event_list: event_list\n  };\n}\nfunction loadedEventsReducer(state, _ref2) {\n  var type = _ref2.type,\n    payload = _ref2.payload;\n  return getAllEvents();\n}\nfunction initEvents() {\n  var storageEvents = localStorage.getItem(\"savedEvents\");\n  //const storageEvents = axios.get('http://localhost:8000/events');\n  /*getAllEvents().then((eventdata) => {\r\n    console.log(\"EVENT DATA: \" + eventdata);\r\n    //dispatchCalEvent2({ type: \"push\", payload: eventdata });\r\n  });*/\n  //let event_list = getAllEvents().then((event_data) => {\n  //this.setState({ savedEvents: event_data});\n  //dispatchCalEvent({ type: \"load\", payload: event_data });\n  //});\n  //const storageEvents2 = getAllEvents();\n  //console.log(\"LOADEDEVENTS \" + event_list);\n  //console.log(\"LOADEDEVENTS \" + loadedEvents);\n  //console.log(\"STORAGEEVENTS \" + storageEvents);\n  var parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n  console.log(\"PARSEDEVENTS \" + parsedEvents);\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n  //localStorage.setItem(\"savedEvents\", getAllEvents());\n  console.log(\"THE GHOST AFFECTED: \");\n  /*useEffect(() => {\r\n  }, []);*/\n  return parsedEvents;\n}\nfunction useForceUpdate() {\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    value = _useState4[0],\n    setValue = _useState4[1]; // integer state\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  }; // update state to force render\n  // An function that increment üëÜüèª the previous state like here \n  // is better than directly setting `value + 1`\n}\n\nexport default function ContextWrapper(props) {\n  var _useState5 = useState(dayjs().month()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    monthIndex = _useState6[0],\n    setMonthIndex = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    smallCalendarMonth = _useState8[0],\n    setSmallCalendarMonth = _useState8[1];\n  var _useState9 = useState(dayjs()),\n    _useState10 = _slicedToArray(_useState9, 2),\n    daySelected = _useState10[0],\n    setDaySelected = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showEventModal = _useState12[0],\n    setShowEventModal = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedEvent = _useState14[0],\n    setSelectedEvent = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    labels = _useState16[0],\n    setLabels = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    dataLoaded = _useState18[0],\n    setDataLoaded = _useState18[1]; //const [forceUpdate, useForceUpdate] = useState(false);\n  //const forceUpdate = useForceUpdate();\n  //const [event_list, setsavedEvents] = useState([]);\n  //const [loadedEvents, dispatchCalEvent2] = useState([]);\n  var _useReducer = useReducer(savedEventsReducer, [], initEvents),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    savedEvents = _useReducer2[0],\n    dispatchCalEvent = _useReducer2[1];\n  var _useContext = useContext(GlobalContext),\n    setsavedEvents = _useContext.setsavedEvents; //const [savedEvents, initEvents] = useState([], );\n  var filteredEvents = useMemo(function () {\n    //console.log(\"SAVED EVENTS \" + JSON.stringify(savedEvents));\n    //console.log(labels);\n    //console.log(\"LOADED EVENTS \" + allEvents);\n    return savedEvents.filter(function (evt) {\n      return labels.filter(function (lbl) {\n        return lbl.checked;\n      }).map(function (lbl) {\n        return lbl.label;\n      }).includes(evt.event_label);\n    });\n  }, [savedEvents, labels, dataLoaded]);\n  useEffect(function () {\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    var storageEvents = localStorage.getItem(\"savedEvents\");\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n    //dispatchCalEvent({ type: \"load\", payload: storageEvents });\n    console.log(\"THE GHOST EFFECT: \" + storageEvents);\n    console.log(\"THE GHOST EFFECTOR: \" + JSON.parse(storageEvents));\n    if (dataLoaded) {\n      console.log(\"DATA LOADED!\");\n    } else if (storageEvents) {\n      //data has loaded, re-render page\n      console.log(\"EVENTS LOADED\");\n      //savedEvents = storageEvents;\n      dispatchCalEvent({\n        type: \"update\",\n        payload: storageEvents\n      });\n      setDataLoaded(true);\n      //useForceUpdate(true);\n    } else {\n      console.log(\"loading...\");\n      dispatchCalEvent({\n        type: \"update\",\n        payload: storageEvents\n      });\n    }\n    ;\n  }, [savedEvents]);\n  useEffect(function () {\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n    //localStorage.setItem(\"savedEvents\", getAllEvents());\n    console.log(\"THE PROPS EFFECT\");\n  }, [localStorage.getItem(\"savedEvents\")]);\n  useEffect(function () {\n    setLabels(function (prevLabels) {\n      return _toConsumableArray(new Set(savedEvents.map(function (evt) {\n        return evt.event_label;\n      }))).map(function (label) {\n        var currentLabel = prevLabels.find(function (lbl) {\n          return lbl.label === label;\n        });\n        return {\n          label: label,\n          checked: currentLabel ? currentLabel.checked : true\n        };\n      });\n    });\n  }, [savedEvents]);\n  useEffect(function () {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n  useEffect(function () {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n  function updateLabel(label) {\n    setLabels(labels.map(function (lbl) {\n      return lbl.label === label.label ? label : lbl;\n    }));\n  }\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      monthIndex: monthIndex,\n      setMonthIndex: setMonthIndex,\n      smallCalendarMonth: smallCalendarMonth,\n      setSmallCalendarMonth: setSmallCalendarMonth,\n      daySelected: daySelected,\n      setDaySelected: setDaySelected,\n      showEventModal: showEventModal,\n      setShowEventModal: setShowEventModal,\n      dataLoaded: dataLoaded,\n      setDataLoaded: setDataLoaded,\n      dispatchCalEvent: dispatchCalEvent,\n      selectedEvent: selectedEvent,\n      setSelectedEvent: setSelectedEvent,\n      savedEvents: savedEvents,\n      setLabels: setLabels,\n      labels: labels,\n      updateLabel: updateLabel,\n      filteredEvents: filteredEvents\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"names":["React","useContext","useState","useEffect","useReducer","useMemo","GlobalContext","getAllEvents","dayjs","axios","Day","savedEventsReducer","state","type","payload","console","log","map","evt","id","filter","Error","loadData","event_list","setEvents","loadedEventsReducer","initEvents","storageEvents","localStorage","getItem","parsedEvents","JSON","parse","useForceUpdate","value","setValue","ContextWrapper","props","month","monthIndex","setMonthIndex","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","selectedEvent","setSelectedEvent","labels","setLabels","dataLoaded","setDataLoaded","savedEvents","dispatchCalEvent","setsavedEvents","filteredEvents","lbl","checked","label","includes","event_label","prevLabels","Set","currentLabel","find","updateLabel","children"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/context/ContextWrapper.js"],"sourcesContent":["import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useMemo,\r\n} from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { getAllEvents } from \"../services/EventService\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from 'axios';\r\nimport Day from \"../components/Day\";\r\n//import api from \"../services/api\";\r\n\r\nfunction savedEventsReducer(state, { type, payload }) {\r\n  console.log(\"STATE: \" + state);\r\n  console.log(\"TYPE: \" + type);\r\n  console.log(\"PAYLOAD: \" + payload);\r\n  switch (type) {\r\n    case \"push\":\r\n      return [...state, payload];\r\n    case \"update\":\r\n      return state.map((evt) =>\r\n        evt.id === payload.id ? payload : evt\r\n      );\r\n      case \"load\":\r\n        return payload;\r\n    case \"delete\":\r\n      return state.filter((evt) => evt.id !== payload.id);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction loadData() {\r\n  const [event_list, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setEvents((event_list) => event_list);\r\n \r\n  }, []); // <- add empty brackets here\r\n  \r\n  return {event_list};\r\n}\r\n\r\n\r\nfunction loadedEventsReducer(state, { type, payload }) {\r\n  return getAllEvents();\r\n}\r\n\r\nfunction initEvents() {\r\n  const storageEvents = localStorage.getItem(\"savedEvents\");\r\n  //const storageEvents = axios.get('http://localhost:8000/events');\r\n  /*getAllEvents().then((eventdata) => {\r\n    console.log(\"EVENT DATA: \" + eventdata);\r\n    //dispatchCalEvent2({ type: \"push\", payload: eventdata });\r\n  });*/\r\n  //let event_list = getAllEvents().then((event_data) => {\r\n    //this.setState({ savedEvents: event_data});\r\n    //dispatchCalEvent({ type: \"load\", payload: event_data });\r\n//});\r\n  //const storageEvents2 = getAllEvents();\r\n  //console.log(\"LOADEDEVENTS \" + event_list);\r\n  //console.log(\"LOADEDEVENTS \" + loadedEvents);\r\n  //console.log(\"STORAGEEVENTS \" + storageEvents);\r\n  const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\r\n  console.log(\"PARSEDEVENTS \" + parsedEvents);\r\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n  //localStorage.setItem(\"savedEvents\", getAllEvents());\r\n    console.log(\"THE GHOST AFFECTED: \");\r\n  /*useEffect(() => {\r\n  }, []);*/\r\n  return parsedEvents;\r\n}\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment üëÜüèª the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}\r\n\r\nexport default function ContextWrapper(props) {\r\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\r\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\r\n  const [daySelected, setDaySelected] = useState(dayjs());\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [labels, setLabels] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  //const [forceUpdate, useForceUpdate] = useState(false);\r\n  //const forceUpdate = useForceUpdate();\r\n  //const [event_list, setsavedEvents] = useState([]);\r\n  //const [loadedEvents, dispatchCalEvent2] = useState([]);\r\n  const [savedEvents, dispatchCalEvent] = useReducer(\r\n    savedEventsReducer,\r\n    [],\r\n    initEvents\r\n  );\r\n  const {\r\n    setsavedEvents,\r\n  } = useContext(GlobalContext);\r\n  //const [savedEvents, initEvents] = useState([], );\r\n\r\n  const filteredEvents = useMemo(() => {\r\n    //console.log(\"SAVED EVENTS \" + JSON.stringify(savedEvents));\r\n    //console.log(labels);\r\n    //console.log(\"LOADED EVENTS \" + allEvents);\r\n    return savedEvents.filter((evt) =>\r\n      labels\r\n        .filter((lbl) => lbl.checked)\r\n        .map((lbl) => lbl.label)\r\n        .includes(evt.event_label)\r\n    );\r\n  }, [savedEvents, labels, dataLoaded]);\r\n\r\n  useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    const storageEvents = localStorage.getItem(\"savedEvents\");\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //dispatchCalEvent({ type: \"load\", payload: storageEvents });\r\n    console.log(\"THE GHOST EFFECT: \" + storageEvents);\r\n    console.log(\"THE GHOST EFFECTOR: \" + JSON.parse(storageEvents));\r\n    \r\n    if (dataLoaded) {\r\n      console.log(\"DATA LOADED!\");\r\n    } else if (storageEvents) {\r\n      //data has loaded, re-render page\r\n      console.log(\"EVENTS LOADED\");\r\n      //savedEvents = storageEvents;\r\n      dispatchCalEvent({ type: \"update\", payload: storageEvents });\r\n      setDataLoaded(true);\r\n      //useForceUpdate(true);\r\n    } else {\r\n      console.log(\"loading...\");\r\n      dispatchCalEvent({ type: \"update\", payload: storageEvents });\r\n    };\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //localStorage.setItem(\"savedEvents\", getAllEvents());\r\n    console.log(\"THE PROPS EFFECT\");\r\n  }, [localStorage.getItem(\"savedEvents\")]);\r\n\r\n  useEffect(() => {\r\n    setLabels((prevLabels) => {\r\n      return [...new Set(savedEvents.map((evt) => evt.event_label))].map(\r\n        (label) => {\r\n          const currentLabel = prevLabels.find(\r\n            (lbl) => lbl.label === label\r\n          );\r\n          return {\r\n            label,\r\n            checked: currentLabel ? currentLabel.checked : true,\r\n          };\r\n        }\r\n      );\r\n    });\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    if (smallCalendarMonth !== null) {\r\n      setMonthIndex(smallCalendarMonth);\r\n    }\r\n  }, [smallCalendarMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!showEventModal) {\r\n      setSelectedEvent(null);\r\n    }\r\n  }, [showEventModal]);\r\n\r\n  function updateLabel(label) {\r\n    setLabels(\r\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        monthIndex,\r\n        setMonthIndex,\r\n        smallCalendarMonth,\r\n        setSmallCalendarMonth,\r\n        daySelected,\r\n        setDaySelected,\r\n        showEventModal,\r\n        setShowEventModal,\r\n        dataLoaded,\r\n        setDataLoaded,\r\n        dispatchCalEvent,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n        savedEvents,\r\n        setLabels,\r\n        labels,\r\n        updateLabel,\r\n        filteredEvents,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}