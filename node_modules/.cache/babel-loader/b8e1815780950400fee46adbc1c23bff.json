{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\App.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getMonth } from \"./util\";\n//import { getTheme, getThemeClass } from \"./util\";\nimport CalendarHeader from \"./components/CalendarHeader\";\nimport Sidebar from \"./components/Sidebar\";\nimport Month from \"./components/Month\";\nimport GlobalContext from \"./context/GlobalContext\";\nimport EventModal from \"./components/EventModal\";\nimport './themes.css';\nimport { getAllEvents, getAllEvents2 } from \"./services/EventService\";\nimport dayjs from \"dayjs\";\nimport axios from 'axios';\nfunction useForceUpdate() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1]; // integer state\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  }; // update state to force render\n  // An function that increment 👆🏻 the previous state like here \n  // is better than directly setting `value + 1`\n}\n\nfunction App(props) {\n  var _useState3 = useState(getMonth()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currenMonth = _useState4[0],\n    setCurrentMonth = _useState4[1];\n  var _useContext = useContext(GlobalContext),\n    monthIndex = _useContext.monthIndex,\n    showEventModal = _useContext.showEventModal,\n    dataLoaded = _useContext.dataLoaded,\n    setDataLoaded = _useContext.setDataLoaded;\n  console.log(\"[APP] PROPS DATA: \" + props.eventList);\n  console.log(\"[APP] SHOW EVENT MODAL: \" + showEventModal);\n  console.log(\"[APP] PROPS DATA LOADED: \" + props.dataLoaded);\n  //const themeColor = getTheme();\n  //const themeClass = getThemeClass();\n  //const forceUpdate = useForceUpdate();\n  //const [eventList, getEvents] = useState([]);\n  useEffect(function () {\n    setCurrentMonth(getMonth(monthIndex));\n  }, [monthIndex]);\n\n  /*useEffect(() => {\r\n    //setDataLoaded(true);\r\n    console.log(\"[APP] DATA LOADED IN APP: \" + dataLoaded);\r\n    dataLoaded ? forceUpdate():console.log(\"[APP] loading in app...\");\r\n  }, [dataLoaded]);*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, showEventModal && /*#__PURE__*/React.createElement(EventModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-screen flex flex-col theme-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CalendarHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), props.dataLoaded && /*#__PURE__*/React.createElement(Month, {\n    month: currenMonth,\n    isDataLoaded: props.dataLoaded,\n    eventList: props.eventList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useContext","useEffect","getMonth","CalendarHeader","Sidebar","Month","GlobalContext","EventModal","getAllEvents","getAllEvents2","dayjs","axios","useForceUpdate","value","setValue","App","props","currenMonth","setCurrentMonth","monthIndex","showEventModal","dataLoaded","setDataLoaded","console","log","eventList"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/App.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { getMonth } from \"./util\";\r\n//import { getTheme, getThemeClass } from \"./util\";\r\nimport CalendarHeader from \"./components/CalendarHeader\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Month from \"./components/Month\";\r\nimport GlobalContext from \"./context/GlobalContext\";\r\nimport EventModal from \"./components/EventModal\";\r\nimport './themes.css';\r\nimport { getAllEvents, getAllEvents2 } from \"./services/EventService\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from 'axios';\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment 👆🏻 the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}\r\n\r\nfunction App(props) {\r\n  const [currenMonth, setCurrentMonth] = useState(getMonth());\r\n  const { monthIndex, showEventModal, dataLoaded, setDataLoaded } = useContext(GlobalContext);\r\n  console.log(\"[APP] PROPS DATA: \" + props.eventList);\r\n  console.log(\"[APP] SHOW EVENT MODAL: \" + showEventModal);\r\n  console.log(\"[APP] PROPS DATA LOADED: \" + props.dataLoaded);\r\n  //const themeColor = getTheme();\r\n  //const themeClass = getThemeClass();\r\n  //const forceUpdate = useForceUpdate();\r\n  //const [eventList, getEvents] = useState([]);\r\n  useEffect(() => {\r\n    setCurrentMonth(getMonth(monthIndex));\r\n  }, [monthIndex]);\r\n\r\n  /*useEffect(() => {\r\n    //setDataLoaded(true);\r\n    console.log(\"[APP] DATA LOADED IN APP: \" + dataLoaded);\r\n    dataLoaded ? forceUpdate():console.log(\"[APP] loading in app...\");\r\n  }, [dataLoaded]);*/\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showEventModal && <EventModal />}\r\n\r\n      <div className={\"h-screen flex flex-col theme-red\"}>\r\n        <CalendarHeader />\r\n        <div className=\"flex flex-1\">\r\n          <Sidebar />\r\n          {props.dataLoaded && <Month month={currenMonth} isDataLoaded={props.dataLoaded} eventList={props.eventList}/>}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,QAAQ;AACjC;AACA,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,cAAc;AACrB,SAASC,YAAY,EAAEC,aAAa,QAAQ,yBAAyB;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,GAAE;EAAA,gBACGb,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9Bc,KAAK;IAAEC,QAAQ,kBAAiB;EACvC,OAAO;IAAA,OAAMA,QAAQ,CAAC,UAAAD,KAAK;MAAA,OAAIA,KAAK,GAAG,CAAC;IAAA,EAAC;EAAA,EAAC,CAAC;EAC3C;EACA;AACF;;AAEA,SAASE,GAAG,CAACC,KAAK,EAAE;EAAA,iBACqBjB,QAAQ,CAACG,QAAQ,EAAE,CAAC;IAAA;IAApDe,WAAW;IAAEC,eAAe;EAAA,kBAC+BlB,UAAU,CAACM,aAAa,CAAC;IAAnFa,UAAU,eAAVA,UAAU;IAAEC,cAAc,eAAdA,cAAc;IAAEC,UAAU,eAAVA,UAAU;IAAEC,aAAa,eAAbA,aAAa;EAC7DC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGR,KAAK,CAACS,SAAS,CAAC;EACnDF,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGJ,cAAc,CAAC;EACxDG,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGR,KAAK,CAACK,UAAU,CAAC;EAC3D;EACA;EACA;EACA;EACApB,SAAS,CAAC,YAAM;IACdiB,eAAe,CAAChB,QAAQ,CAACiB,UAAU,CAAC,CAAC;EACvC,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;AACF;AACA;AACA;AACA;;EAIE,oBACE,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACZC,cAAc,iBAAI,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAEjC;IAAK,SAAS,EAAE,kCAAmC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjD,oBAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAClB;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1B,oBAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACVJ,KAAK,CAACK,UAAU,iBAAI,oBAAC,KAAK;IAAC,KAAK,EAAEJ,WAAY;IAAC,YAAY,EAAED,KAAK,CAACK,UAAW;IAAC,SAAS,EAAEL,KAAK,CAACS,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CACzG,CACF,CACS;AAErB;AAEA,eAAeV,GAAG"},"metadata":{},"sourceType":"module"}