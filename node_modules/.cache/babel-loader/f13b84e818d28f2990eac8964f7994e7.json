{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\context\\\\ContextWrapper.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect, useReducer, useMemo } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from \"dayjs\";\nimport { getAllEvents, createEvent } from \"../services/EventService\";\nfunction savedEventsReducer(state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  switch (type) {\n    case \"push\":\n      return [].concat(_toConsumableArray(state), [payload]);\n    case \"update\":\n      return state.map(function (evt) {\n        return evt.id === payload.id ? payload : evt;\n      });\n    case \"delete\":\n      return state.filter(function (evt) {\n        return evt.id !== payload.id;\n      });\n    default:\n      throw new Error();\n  }\n}\nfunction initEvents() {\n  return _initEvents.apply(this, arguments);\n}\nfunction _initEvents() {\n  _initEvents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var storageEvents, parsedEvents;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            storageEvents = getAllEvents();\n            console.log(\"TYPEOF\");\n            console.log(typeof storageEvents);\n            //const storageEvents = localStorage.getItem(\"savedEvents\");\n            parsedEvents = storageEvents ? storageEvents : []; //const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n            console.log(\"TYPEOF2\");\n            console.log(typeof parsedEvents);\n            console.log(JSON.stringify(parsedEvents));\n            console.log(parsedEvents.then(function (response) {\n              console.log(\"parsedevents \" + response[1].event_title);\n              console.log(\"parsedevents2 \" + JSON.stringify(response));\n              parsedEvents = JSON.stringify(response);\n            }));\n            console.log(\"FINALPARSED\");\n            console.log(parsedEvents.response);\n            return _context.abrupt(\"return\", JSON.stringify(parsedEvents));\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _initEvents.apply(this, arguments);\n}\nexport default function ContextWrapper(props) {\n  var _useState = useState(dayjs().month()),\n    _useState2 = _slicedToArray(_useState, 2),\n    monthIndex = _useState2[0],\n    setMonthIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    smallCalendarMonth = _useState4[0],\n    setSmallCalendarMonth = _useState4[1];\n  var _useState5 = useState(dayjs()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    daySelected = _useState6[0],\n    setDaySelected = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showEventModal = _useState8[0],\n    setShowEventModal = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedEvent = _useState10[0],\n    setSelectedEvent = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    labels = _useState12[0],\n    setLabels = _useState12[1];\n  var _useReducer = useReducer(savedEventsReducer, [], initEvents),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    savedEvents = _useReducer2[0],\n    dispatchCalEvent = _useReducer2[1];\n  var filteredEvents = useMemo(function () {\n    console.log(\"TYPEOF3\");\n    console.log(typeof savedEvents);\n    console.log(savedEvents);\n    return Object.values(savedEvents).filter(function (evt) {\n      return labels.filter(function (lbl) {\n        return lbl.checked;\n      }).map(function (lbl) {\n        return lbl.label;\n      }).includes(evt.event_label);\n    });\n  }, [savedEvents, labels]);\n  useEffect(function () {\n    localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    //savedEvents = JSON.stringify(savedEvents);\n  }, [savedEvents]);\n  useEffect(function () {\n    setLabels(function (prevLabels) {\n      return _toConsumableArray(new Set(Object.values(savedEvents).map(function (evt) {\n        return evt.event_label;\n      }))).map(function (event_label) {\n        var currentLabel = prevLabels.find(function (lbl) {\n          return lbl.label === event_label;\n        });\n        return {\n          event_label: event_label,\n          checked: currentLabel ? currentLabel.checked : true\n        };\n      });\n    });\n  }, [savedEvents]);\n  useEffect(function () {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n  useEffect(function () {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n  function updateLabel(label) {\n    setLabels(labels.map(function (lbl) {\n      return lbl.label === label.label ? label : lbl;\n    }));\n  }\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      monthIndex: monthIndex,\n      setMonthIndex: setMonthIndex,\n      smallCalendarMonth: smallCalendarMonth,\n      setSmallCalendarMonth: setSmallCalendarMonth,\n      daySelected: daySelected,\n      setDaySelected: setDaySelected,\n      showEventModal: showEventModal,\n      setShowEventModal: setShowEventModal,\n      dispatchCalEvent: dispatchCalEvent,\n      selectedEvent: selectedEvent,\n      setSelectedEvent: setSelectedEvent,\n      savedEvents: savedEvents,\n      setLabels: setLabels,\n      labels: labels,\n      updateLabel: updateLabel,\n      filteredEvents: filteredEvents\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"names":["React","useState","useEffect","useReducer","useMemo","GlobalContext","dayjs","getAllEvents","createEvent","savedEventsReducer","state","type","payload","map","evt","id","filter","Error","initEvents","storageEvents","console","log","parsedEvents","JSON","stringify","then","response","event_title","ContextWrapper","props","month","monthIndex","setMonthIndex","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","selectedEvent","setSelectedEvent","labels","setLabels","savedEvents","dispatchCalEvent","filteredEvents","Object","values","lbl","checked","label","includes","event_label","localStorage","setItem","prevLabels","Set","currentLabel","find","updateLabel","children"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/context/ContextWrapper.js"],"sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useMemo,\r\n} from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport dayjs from \"dayjs\";\r\nimport { getAllEvents, createEvent } from \"../services/EventService\";\r\n\r\nfunction savedEventsReducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case \"push\":\r\n      return [...state, payload];\r\n    case \"update\":\r\n      return state.map((evt) =>\r\n        evt.id === payload.id ? payload : evt\r\n      );\r\n    case \"delete\":\r\n      return state.filter((evt) => evt.id !== payload.id);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\nasync function initEvents() {\r\n  const storageEvents = getAllEvents();\r\n  console.log(\"TYPEOF\")\r\n  console.log(typeof storageEvents);\r\n  //const storageEvents = localStorage.getItem(\"savedEvents\");\r\n  let parsedEvents = storageEvents ? storageEvents : [];\r\n  //const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\r\n  console.log(\"TYPEOF2\")\r\n  console.log(typeof parsedEvents);\r\n  console.log(JSON.stringify(parsedEvents));\r\n  console.log(parsedEvents.then(function(response){\r\n    console.log(\"parsedevents \" + response[1].event_title);\r\n    console.log(\"parsedevents2 \" + JSON.stringify(response));\r\n    parsedEvents = JSON.stringify(response);\r\n  }));\r\n  console.log(\"FINALPARSED\")\r\n  console.log(parsedEvents.response);\r\n\r\n  return JSON.stringify(parsedEvents);\r\n}\r\n\r\nexport default function ContextWrapper(props) {\r\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\r\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\r\n  const [daySelected, setDaySelected] = useState(dayjs());\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [labels, setLabels] = useState([]);\r\n  const [savedEvents, dispatchCalEvent] = useReducer(\r\n    savedEventsReducer,\r\n    [],\r\n    initEvents\r\n  );\r\n\r\n  const filteredEvents = useMemo(() => {\r\n    console.log(\"TYPEOF3\")\r\n    console.log(typeof savedEvents);\r\n    console.log(savedEvents);\r\n    return Object.values(savedEvents).filter((evt) =>\r\n      labels\r\n        .filter((lbl) => lbl.checked)\r\n        .map((lbl) => lbl.label)\r\n        .includes(evt.event_label)\r\n    );\r\n  }, [savedEvents, labels]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    //savedEvents = JSON.stringify(savedEvents);\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    setLabels((prevLabels) => {\r\n      return [...new Set(Object.values(savedEvents).map((evt) => evt.event_label))].map(\r\n        (event_label) => {\r\n          const currentLabel = prevLabels.find(\r\n            (lbl) => lbl.label === event_label\r\n          );\r\n          return {\r\n            event_label,\r\n            checked: currentLabel ? currentLabel.checked : true,\r\n          };\r\n        }\r\n      );\r\n    });\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    if (smallCalendarMonth !== null) {\r\n      setMonthIndex(smallCalendarMonth);\r\n    }\r\n  }, [smallCalendarMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!showEventModal) {\r\n      setSelectedEvent(null);\r\n    }\r\n  }, [showEventModal]);\r\n\r\n  function updateLabel(label) {\r\n    setLabels(\r\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        monthIndex,\r\n        setMonthIndex,\r\n        smallCalendarMonth,\r\n        setSmallCalendarMonth,\r\n        daySelected,\r\n        setDaySelected,\r\n        showEventModal,\r\n        setShowEventModal,\r\n        dispatchCalEvent,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n        savedEvents,\r\n        setLabels,\r\n        labels,\r\n        updateLabel,\r\n        filteredEvents,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}