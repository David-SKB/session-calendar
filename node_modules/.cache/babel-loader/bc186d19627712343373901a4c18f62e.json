{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nexport function getAllEvents2() {\n  return _getAllEvents.apply(this, arguments);\n}\nfunction _getAllEvents() {\n  _getAllEvents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _useState, _useState2, result, setResult, message;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _useState = useState([]), _useState2 = _slicedToArray(_useState, 2), result = _useState2[0], setResult = _useState2[1];\n            message = /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                var response;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return axios.get('http://localhost:8000/events');\n                      case 3:\n                        response = _context.sent;\n                        console.log('response data ', response.data);\n                        //return response.data;\n                        response.data, _readOnlyError(\"result\");\n                        setResult(result);\n                        return _context.abrupt(\"return\", result);\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n                        //return [];\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 10]]);\n              }));\n              return function message() {\n                return _ref.apply(this, arguments);\n              };\n            }();\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllEvents.apply(this, arguments);\n}\nexport function createEvent(_x) {\n  return _createEvent.apply(this, arguments);\n}\nfunction _createEvent() {\n  _createEvent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(\"/api/user\", {\n              event: data\n            });\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _createEvent.apply(this, arguments);\n}\nexport function getAllEvents() {\n  return _getAllEvents2.apply(this, arguments);\n}\nfunction _getAllEvents2() {\n  _getAllEvents2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var event_list;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios.get('http://localhost:8000/events').then(function (response) {\n              console.log('response data INSIDE ' + response.data);\n              console.log('response data INSIDE 2 ' + JSON.stringify(response.data));\n              event_list = response.data;\n              //return response.data;\n            }).catch(function (err) {\n              console.log(\"ERROR: \" + err);\n              return err;\n            }).then(function () {\n              // always executed\n            });\n          case 2:\n            console.log('response DATA ' + JSON.stringify(event_list));\n            console.log('response DATA 2 ', JSON.stringify(event_list.data));\n            //console.log('response parsed ' + JSON.parse(response.data));\n            //setEventList(response.data);\n\n            /*useEffect(() => {\r\n                setEventList((event_list) => response.data);\r\n             \r\n              }, []); // <- add empty brackets here*/\n            //return {event_list};\n            return _context4.abrupt(\"return\", JSON.stringify(event_list));\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getAllEvents2.apply(this, arguments);\n}","map":{"version":3,"names":["axios","React","useEffect","useState","getAllEvents2","result","setResult","message","get","response","console","log","data","createEvent","post","event","getAllEvents","then","JSON","stringify","event_list","catch","err"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/services/EventService.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport async function getAllEvents2() {\r\n\r\n    const [result, setResult] = useState([]);\r\n\r\n    const message = async () => {\r\n        try{\r\n            let response = await axios.get('http://localhost:8000/events');\r\n            console.log('response data ', response.data)\r\n            //return response.data;\r\n            result = response.data;\r\n            setResult(result);\r\n            return (result)\r\n        }catch(error) {\r\n            console.log(error)\r\n            //return [];\r\n        }\r\n    };\r\n}\r\n\r\nexport async function createEvent(data) {\r\n    const response = await axios.post(`/api/user`, {event: data});\r\n    return response.data;\r\n}\r\n\r\nexport async function getAllEvents() {\r\n    //const [event_list, setEventList] = useState([])\r\n    let event_list;\r\n    await axios.get('http://localhost:8000/events').then(function (response) {\r\n        console.log('response data INSIDE ' + response.data);\r\n        console.log('response data INSIDE 2 ' + JSON.stringify(response.data));\r\n        event_list = response.data\r\n        //return response.data;\r\n    }).catch(function(err) {\r\n       console.log(\"ERROR: \" + err); \r\n       return err;\r\n    }).then(function () {\r\n        // always executed\r\n      });\r\n    console.log('response DATA ' + JSON.stringify(event_list));\r\n    console.log('response DATA 2 ', JSON.stringify(event_list.data));\r\n    //console.log('response parsed ' + JSON.parse(response.data));\r\n    //setEventList(response.data);\r\n\r\n    /*useEffect(() => {\r\n        setEventList((event_list) => response.data);\r\n     \r\n      }, []); // <- add empty brackets here*/\r\n    //return {event_list};\r\n    return JSON.stringify(event_list);\r\n    //return event_list;\r\n}"],"mappings":";;;+CACA;AADA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,gBAAsBC,aAAa;EAAA;AAAA;AAiBlC;EAAA,2EAjBM;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,YAEyBD,QAAQ,CAAC,EAAE,CAAC,6CAAjCE,MAAM,kBAAEC,SAAS;YAElBC,OAAO;cAAA,sEAAG;gBAAA;gBAAA;kBAAA;oBAAA;sBAAA;wBAAA;wBAAA;wBAAA,OAEaP,KAAK,CAACQ,GAAG,CAAC,8BAA8B,CAAC;sBAAA;wBAA1DC,QAAQ;wBACZC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,IAAI,CAAC;wBAC5C;wBACSH,QAAQ,CAACG,IAAI;wBACtBN,SAAS,CAACD,MAAM,CAAC;wBAAC,iCACVA,MAAM;sBAAA;wBAAA;wBAAA;wBAEdK,OAAO,CAACC,GAAG,aAAO;wBAClB;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA;cAAA,CAEP;cAAA,gBAZKJ,OAAO;gBAAA;cAAA;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAahB;EAAA;AAAA;AAED,gBAAsBM,WAAW;EAAA;AAAA;AAGhC;EAAA,0EAHM,kBAA2BD,IAAI;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACXZ,KAAK,CAACc,IAAI,cAAc;cAACC,KAAK,EAAEH;YAAI,CAAC,CAAC;UAAA;YAAvDH,QAAQ;YAAA,kCACPA,QAAQ,CAACG,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACvB;EAAA;AAAA;AAED,gBAAsBI,YAAY;EAAA;AAAA;AA0BjC;EAAA,4EA1BM;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAGGhB,KAAK,CAACQ,GAAG,CAAC,8BAA8B,CAAC,CAACS,IAAI,CAAC,UAAUR,QAAQ,EAAE;cACrEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGF,QAAQ,CAACG,IAAI,CAAC;cACpDF,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGO,IAAI,CAACC,SAAS,CAACV,QAAQ,CAACG,IAAI,CAAC,CAAC;cACtEQ,UAAU,GAAGX,QAAQ,CAACG,IAAI;cAC1B;YACJ,CAAC,CAAC,CAACS,KAAK,CAAC,UAASC,GAAG,EAAE;cACpBZ,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGW,GAAG,CAAC;cAC5B,OAAOA,GAAG;YACb,CAAC,CAAC,CAACL,IAAI,CAAC,YAAY;cAChB;YAAA,CACD,CAAC;UAAA;YACJP,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGO,IAAI,CAACC,SAAS,CAACC,UAAU,CAAC,CAAC;YAC1DV,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,IAAI,CAACC,SAAS,CAACC,UAAU,CAACR,IAAI,CAAC,CAAC;YAChE;YACA;;YAEA;AACJ;AACA;AACA;YACI;YAAA,kCACOM,IAAI,CAACC,SAAS,CAACC,UAAU,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEpC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}