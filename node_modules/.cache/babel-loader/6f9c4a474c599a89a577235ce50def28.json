{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\context\\\\ContextWrapper.js\";\nimport React, { useContext, useState, useEffect, useReducer, useMemo } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport { getAllEvents } from \"../services/EventService\";\nimport dayjs from \"dayjs\";\nimport axios from 'axios';\nimport Day from \"../components/Day\";\n//import api from \"../services/api\";\n\nfunction savedEventsReducer(state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  console.log(\"[CW] STATE: \" + state);\n  console.log(\"[CW] TYPE: \" + type);\n  console.log(\"[CW] PAYLOAD: \" + payload);\n  switch (type) {\n    case \"push\":\n      return [].concat(_toConsumableArray(state), [payload]);\n    case \"update\":\n      return state.map(function (evt) {\n        return evt.id === payload.id ? payload : evt;\n      });\n    case \"load\":\n      return payload;\n    case \"delete\":\n      return state.filter(function (evt) {\n        return evt.id !== payload.id;\n      });\n    default:\n      throw new Error();\n  }\n}\nfunction loadData() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    event_list = _useState2[0],\n    setEvents = _useState2[1];\n  useEffect(function () {\n    setEvents(function (event_list) {\n      return event_list;\n    });\n  }, []); // <- add empty brackets here\n\n  return {\n    event_list: event_list\n  };\n}\n\n/*function loadedEventsReducer(state, { type, payload }) {\r\n  return getAllEvents();\r\n}*/\n\nfunction initEvents(props) {\n  console.log(\"[CW] INIT EVENTS: \" + props);\n  //let eventsLoaded = getAllEvents();\n  //StorageEvent\n  //console.log(\"[CW] EVENTS LOADED: \" + eventsLoaded);\n  var storageEvents = props.eventList;\n  //const storageEvents = localStorage.getItem(\"savedEvents\");\n  //const storageEvents = axios.get('http://localhost:8000/events');\n  /*getAllEvents().then((eventdata) => {\r\n    console.log(\"EVENT DATA: \" + eventdata);\r\n    //dispatchCalEvent2({ type: \"push\", payload: eventdata });\r\n  });*/\n  //let event_list = getAllEvents().then((event_data) => {\n  //this.setState({ savedEvents: event_data});\n  //dispatchCalEvent({ type: \"load\", payload: event_data });\n  //});\n  //const storageEvents2 = getAllEvents();\n  //console.log(\"LOADEDEVENTS \" + event_list);\n  //console.log(\"LOADEDEVENTS \" + loadedEvents);\n  //console.log(\"STORAGEEVENTS \" + storageEvents);\n\n  // 👇️ Check if undefined or null\n  var count = 0;\n  if (props.eventList === undefined || props.eventList === null) {\n    console.log('✅ variable is undefined or null init()');\n  } else {\n    console.log('⛔️ variable is NOT undefined or null init()');\n    count = Object.keys(props.eventList).length;\n  }\n  ;\n  var parsedEvents = count > 0 ? JSON.parse(storageEvents) : [];\n  //const parsedEvents = (storageEvents !== undefined ? JSON.parse(storageEvents) : []);\n  console.log(\"[CW] PARSEDEVENTS \" + parsedEvents);\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n  //localStorage.setItem(\"savedEvents\", getAllEvents());\n  console.log(\"[CW] THE GHOST AFFECTED: \");\n  return parsedEvents;\n}\nfunction useForceUpdate() {\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    value = _useState4[0],\n    setValue = _useState4[1]; // integer state\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  }; // update state to force render\n  // An function that increment 👆🏻 the previous state like here \n  // is better than directly setting `value + 1`\n}\n\nexport default function ContextWrapper(props) {\n  var _useState5 = useState(dayjs().month()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    monthIndex = _useState6[0],\n    setMonthIndex = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    smallCalendarMonth = _useState8[0],\n    setSmallCalendarMonth = _useState8[1];\n  var _useState9 = useState(dayjs()),\n    _useState10 = _slicedToArray(_useState9, 2),\n    daySelected = _useState10[0],\n    setDaySelected = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showEventModal = _useState12[0],\n    setShowEventModal = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedEvent = _useState14[0],\n    setSelectedEvent = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    labels = _useState16[0],\n    setLabels = _useState16[1]; //const [dataLoaded, setDataLoaded] = useState(false);\n  //const [forceUpdate, useForceUpdate] = useState(false);\n  //const forceUpdate = useForceUpdate();\n  //const [event_list, setsavedEvents] = useState([]);\n  //const [loadedEvents, dispatchCalEvent2] = useState([]);\n  //const [savedEvents, dispatchCalEvent] = useState(initEvents());\n  var _useState17 = useState(props.eventList),\n    _useState18 = _slicedToArray(_useState17, 2),\n    eventList = _useState18[0],\n    getEvents = _useState18[1];\n  var _useReducer = useReducer(savedEventsReducer, [], initEvents),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    savedEvents = _useReducer2[0],\n    dispatchCalEvent = _useReducer2[1];\n  var _useContext = useContext(GlobalContext),\n    setsavedEvents = _useContext.setsavedEvents; //getAllEvents();\n  //const [savedEvents, initEvents] = useState([], );\n  console.log(\"WHAT IS THIS? \" + props.eventList);\n  var filteredEvents = useMemo(function () {\n    //console.log(\"SAVED EVENTS \" + JSON.stringify(savedEvents));\n    //console.log(labels);\n    //console.log(\"LOADED EVENTS \" + allEvents);\n    //console.log(\"[CW] FILTERED EVENTS UPDATER: \" + eventList);\n    //console.log(\"[CW] TYPE OF: \" + typeof eventList);\n    //console.log(eventList);\n    //const returnList = JSON.parse(eventList);\n    console.log(\"[CW] PROPS DATATYPE: \" + typeof props.eventList);\n    props.eventList == null ? console.log(\"[CW] PROPS CONDITION NULLTYPE [TRUE]: \" + props.eventList) : console.log(\"[CW] PROPS CONDITION NULLTYPE [FALSE]: \" + props.eventList);\n    props.eventList == undefined ? console.log(\"[CW] PROPS CONDITION UNDEFINED [TRUE]: \" + props.eventList) : console.log(\"[CW] PROPS CONDITION UNDEFINED [FALSE]: \" + props.eventList);\n    props.eventList == \"\" ? console.log(\"[CW] PROPS CONDITION EMPTYSTRING [TRUE]: \" + props.eventList) : console.log(\"[CW] PROPS CONDITION EMPTYSTRING [FALSE]: \" + props.eventList);\n    var count = Object.keys(props.eventList).length;\n    //if (props.eventList. !== \"\" || props.eventList !==null) {\n    if (count >= 0) {\n      console.log(\"[CW] PROPS DATA HOE: \" + props.eventList);\n      return savedEvents.filter(function (evt) {\n        return (\n          //props.eventList ? console.log(\"[CW] PROPS FOUND: \" + props.eventList) : return null;\n          //return props.eventList.filter((evt) =>\n          labels.filter(function (lbl) {\n            return lbl.checked;\n          }).map(function (lbl) {\n            return lbl.label;\n          }).includes(evt.event_label)\n        );\n      });\n    }\n    ;\n    return [];\n  }, [savedEvents, labels, props.isDataLoaded]);\n\n  /*useEffect(() => {\r\n    getAllEvents().then(\r\n      result => setDataLoaded(true)\r\n    );\r\n    console.log(\"[CW] LOADING APP EFFECTS...\");\r\n    console.log(eventList);\r\n  }, []);*/\n\n  useEffect(function () {\n    console.log(\"[CW] DATA LOADED BITCH \" + isDataLoaded);\n  }, [isDataLoaded]);\n\n  /*useEffect(() => {\r\n    console.log(\"[CW] EVENTLIST UPDATED: \" + eventList);\r\n  }, [eventList]);*/\n\n  /*const getAllEvents = () => {\r\n    axios.get('http://localhost:8000/events')\r\n    .then((response) => {\r\n        const allEvents = JSON.stringify(response.data);\r\n        localStorage.setItem(\"savedEvents\", allEvents);\r\n        console.log(\"[CW] LOADED DATA: \" + allEvents);\r\n        getEvents(allEvents);\r\n        console.log(\"[CW] COMPLETE TIME: \" + dayjs());\r\n    })\r\n    .catch(function(err) {\r\n        console.log(\"ERROR: \" + err); \r\n    });\r\n  console.log(\"[CW] LOADED??? \" + eventList);\r\n  }; */\n\n  useEffect(function () {\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    var storageEvents = localStorage.getItem(\"savedEvents\");\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n    //dispatchCalEvent({ type: \"load\", payload: storageEvents });\n    //console.log(\"[CW] THE GHOST EFFECT: \" + storageEvents);\n    console.log(\"[CW] THE GHOST EFFECT 2: \" + props.eventList);\n    //console.log(\"[CW] THE GHOST EFFECTOR: \" + JSON.parse(storageEvents));\n\n    if (props.isDataLoaded) {\n      console.log(\"[CW] DATA LOADED: \" + props.isDataLoaded);\n    } else {\n      console.log(\"[CW] DATA NOT LOADED: \" + props.isDataLoaded);\n    }\n\n    /*if (dataLoaded && eventList != \"\" && eventList != [] && eventList != undefined && eventList != null) {\r\n      console.log(\"[CW] DATA LOADED! \" + eventList);\r\n      \r\n    } else if (eventList != \"\" && eventList != [] && eventList != undefined && eventList != null) {\r\n      //data has loaded, re-render page\r\n      console.log(\"[CW] EVENTS LOADED: \" + eventList);\r\n      //savedEvents = storageEvents;\r\n      dispatchCalEvent({ type: \"update\", payload: eventList });\r\n      setDataLoaded(true);\r\n      //useForceUpdate(true);\r\n    } else {\r\n      console.log(\"[CW] loading...\");\r\n      dispatchCalEvent({ type: \"update\", payload: eventList });\r\n    };*/\n  }, [savedEvents]);\n\n  /*useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //localStorage.setItem(\"savedEvents\", getAllEvents());\r\n    console.log(\"[CW] THE PROPS EFFECT\");\r\n  }, [localStorage.getItem(\"savedEvents\")]);*/\n\n  useEffect(function () {\n    savedEvents == null ? console.log(\"[CW] PROPSEFFECT CONDITION EMPTYSTRING [TRUE]: \" + savedEvents) : console.log(\"[CW] PROPSEFFECT CONDITION EMPTYSTRING [FALSE]: \" + savedEvents);\n    if (savedEvents != null) {\n      setLabels(function (prevLabels) {\n        return _toConsumableArray(new Set(savedEvents.map(function (evt) {\n          return evt.event_label;\n        }))).map(function (label) {\n          var currentLabel = prevLabels.find(function (lbl) {\n            return lbl.label === label;\n          });\n          return {\n            label: label,\n            checked: currentLabel ? currentLabel.checked : true\n          };\n        });\n      });\n    }\n    ;\n  }, [savedEvents]);\n  useEffect(function () {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n  useEffect(function () {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n  function updateLabel(label) {\n    setLabels(labels.map(function (lbl) {\n      return lbl.label === label.label ? label : lbl;\n    }));\n  }\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      monthIndex: monthIndex,\n      setMonthIndex: setMonthIndex,\n      smallCalendarMonth: smallCalendarMonth,\n      setSmallCalendarMonth: setSmallCalendarMonth,\n      daySelected: daySelected,\n      setDaySelected: setDaySelected,\n      showEventModal: showEventModal,\n      setShowEventModal: setShowEventModal,\n      dataLoaded: dataLoaded,\n      setDataLoaded: setDataLoaded,\n      dispatchCalEvent: dispatchCalEvent,\n      selectedEvent: selectedEvent,\n      setSelectedEvent: setSelectedEvent,\n      savedEvents: savedEvents,\n      setLabels: setLabels,\n      labels: labels,\n      updateLabel: updateLabel,\n      filteredEvents: filteredEvents\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, props.children, props.isDataLoaded);\n}","map":{"version":3,"names":["React","useContext","useState","useEffect","useReducer","useMemo","GlobalContext","getAllEvents","dayjs","axios","Day","savedEventsReducer","state","type","payload","console","log","map","evt","id","filter","Error","loadData","event_list","setEvents","initEvents","props","storageEvents","eventList","count","undefined","Object","keys","length","parsedEvents","JSON","parse","useForceUpdate","value","setValue","ContextWrapper","month","monthIndex","setMonthIndex","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","selectedEvent","setSelectedEvent","labels","setLabels","getEvents","savedEvents","dispatchCalEvent","setsavedEvents","filteredEvents","lbl","checked","label","includes","event_label","isDataLoaded","localStorage","getItem","prevLabels","Set","currentLabel","find","updateLabel","dataLoaded","setDataLoaded","children"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/context/ContextWrapper.js"],"sourcesContent":["import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useMemo,\r\n} from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport { getAllEvents } from \"../services/EventService\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from 'axios';\r\nimport Day from \"../components/Day\";\r\n//import api from \"../services/api\";\r\n\r\nfunction savedEventsReducer(state, { type, payload }) {\r\n  console.log(\"[CW] STATE: \" + state);\r\n  console.log(\"[CW] TYPE: \" + type);\r\n  console.log(\"[CW] PAYLOAD: \" + payload);\r\n  switch (type) {\r\n    case \"push\":\r\n      return [...state, payload];\r\n    case \"update\":\r\n      return state.map((evt) =>\r\n        evt.id === payload.id ? payload : evt\r\n      );\r\n    case \"load\":\r\n      return payload;\r\n    case \"delete\":\r\n      return state.filter((evt) => evt.id !== payload.id);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction loadData() {\r\n  const [event_list, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setEvents((event_list) => event_list);\r\n\r\n  }, []); // <- add empty brackets here\r\n\r\n  return { event_list };\r\n}\r\n\r\n\r\n/*function loadedEventsReducer(state, { type, payload }) {\r\n  return getAllEvents();\r\n}*/\r\n\r\nfunction initEvents(props) {\r\n  console.log(\"[CW] INIT EVENTS: \" + props);\r\n  //let eventsLoaded = getAllEvents();\r\n  //StorageEvent\r\n  //console.log(\"[CW] EVENTS LOADED: \" + eventsLoaded);\r\n  const storageEvents = props.eventList;\r\n  //const storageEvents = localStorage.getItem(\"savedEvents\");\r\n  //const storageEvents = axios.get('http://localhost:8000/events');\r\n  /*getAllEvents().then((eventdata) => {\r\n    console.log(\"EVENT DATA: \" + eventdata);\r\n    //dispatchCalEvent2({ type: \"push\", payload: eventdata });\r\n  });*/\r\n  //let event_list = getAllEvents().then((event_data) => {\r\n  //this.setState({ savedEvents: event_data});\r\n  //dispatchCalEvent({ type: \"load\", payload: event_data });\r\n  //});\r\n  //const storageEvents2 = getAllEvents();\r\n  //console.log(\"LOADEDEVENTS \" + event_list);\r\n  //console.log(\"LOADEDEVENTS \" + loadedEvents);\r\n  //console.log(\"STORAGEEVENTS \" + storageEvents);\r\n\r\n  // 👇️ Check if undefined or null\r\n  var count = 0;\r\n  if (props.eventList === undefined || props.eventList === null) {\r\n    console.log('✅ variable is undefined or null init()');\r\n  } else {\r\n    console.log('⛔️ variable is NOT undefined or null init()');\r\n    count = Object.keys(props.eventList).length;\r\n  };\r\n  const parsedEvents = (count > 0 ? JSON.parse(storageEvents) : []);\r\n  //const parsedEvents = (storageEvents !== undefined ? JSON.parse(storageEvents) : []);\r\n  console.log(\"[CW] PARSEDEVENTS \" + parsedEvents);\r\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n  //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n  //localStorage.setItem(\"savedEvents\", getAllEvents());\r\n  console.log(\"[CW] THE GHOST AFFECTED: \");\r\n  return parsedEvents;\r\n}\r\n\r\nfunction useForceUpdate() {\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment 👆🏻 the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}\r\n\r\nexport default function ContextWrapper(props) {\r\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\r\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\r\n  const [daySelected, setDaySelected] = useState(dayjs());\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [labels, setLabels] = useState([]);\r\n  //const [dataLoaded, setDataLoaded] = useState(false);\r\n  //const [forceUpdate, useForceUpdate] = useState(false);\r\n  //const forceUpdate = useForceUpdate();\r\n  //const [event_list, setsavedEvents] = useState([]);\r\n  //const [loadedEvents, dispatchCalEvent2] = useState([]);\r\n  //const [savedEvents, dispatchCalEvent] = useState(initEvents());\r\n  const [eventList, getEvents] = useState(props.eventList);\r\n  const [savedEvents, dispatchCalEvent] = useReducer(\r\n    savedEventsReducer,\r\n    [],\r\n    initEvents\r\n  );\r\n  const {\r\n    setsavedEvents,\r\n  } = useContext(GlobalContext);\r\n  //getAllEvents();\r\n  //const [savedEvents, initEvents] = useState([], );\r\n  console.log(\"WHAT IS THIS? \" + (props.eventList));\r\n\r\n  const filteredEvents = useMemo(() => {\r\n    //console.log(\"SAVED EVENTS \" + JSON.stringify(savedEvents));\r\n    //console.log(labels);\r\n    //console.log(\"LOADED EVENTS \" + allEvents);\r\n    //console.log(\"[CW] FILTERED EVENTS UPDATER: \" + eventList);\r\n    //console.log(\"[CW] TYPE OF: \" + typeof eventList);\r\n    //console.log(eventList);\r\n    //const returnList = JSON.parse(eventList);\r\n    console.log(\"[CW] PROPS DATATYPE: \" + typeof props.eventList);\r\n    props.eventList == null ? console.log(\"[CW] PROPS CONDITION NULLTYPE [TRUE]: \" + props.eventList) : console.log(\"[CW] PROPS CONDITION NULLTYPE [FALSE]: \" + props.eventList);\r\n    props.eventList == undefined ? console.log(\"[CW] PROPS CONDITION UNDEFINED [TRUE]: \" + props.eventList) : console.log(\"[CW] PROPS CONDITION UNDEFINED [FALSE]: \" + props.eventList);\r\n    props.eventList == \"\" ? console.log(\"[CW] PROPS CONDITION EMPTYSTRING [TRUE]: \" + props.eventList) : console.log(\"[CW] PROPS CONDITION EMPTYSTRING [FALSE]: \" + props.eventList);\r\n\r\n    var count = Object.keys(props.eventList).length;\r\n    //if (props.eventList. !== \"\" || props.eventList !==null) {\r\n    if (count >= 0) {\r\n      console.log(\"[CW] PROPS DATA HOE: \" + props.eventList);\r\n      return savedEvents.filter((evt) =>\r\n        //props.eventList ? console.log(\"[CW] PROPS FOUND: \" + props.eventList) : return null;\r\n        //return props.eventList.filter((evt) =>\r\n        labels\r\n          .filter((lbl) => lbl.checked)\r\n          .map((lbl) => lbl.label)\r\n          .includes(evt.event_label)\r\n      );\r\n    };\r\n    return [];\r\n\r\n  }, [savedEvents, labels, props.isDataLoaded]);\r\n\r\n  /*useEffect(() => {\r\n    getAllEvents().then(\r\n      result => setDataLoaded(true)\r\n    );\r\n    console.log(\"[CW] LOADING APP EFFECTS...\");\r\n    console.log(eventList);\r\n  }, []);*/\r\n\r\n  useEffect(() => {\r\n    console.log(\"[CW] DATA LOADED BITCH \" + isDataLoaded);\r\n  }, [isDataLoaded]);\r\n\r\n\r\n  /*useEffect(() => {\r\n    console.log(\"[CW] EVENTLIST UPDATED: \" + eventList);\r\n  }, [eventList]);*/\r\n\r\n  /*const getAllEvents = () => {\r\n    axios.get('http://localhost:8000/events')\r\n    .then((response) => {\r\n        const allEvents = JSON.stringify(response.data);\r\n        localStorage.setItem(\"savedEvents\", allEvents);\r\n        console.log(\"[CW] LOADED DATA: \" + allEvents);\r\n        getEvents(allEvents);\r\n        console.log(\"[CW] COMPLETE TIME: \" + dayjs());\r\n    })\r\n    .catch(function(err) {\r\n        console.log(\"ERROR: \" + err); \r\n    });\r\n  console.log(\"[CW] LOADED??? \" + eventList);\r\n  }; */\r\n\r\n  useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    const storageEvents = localStorage.getItem(\"savedEvents\");\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //dispatchCalEvent({ type: \"load\", payload: storageEvents });\r\n    //console.log(\"[CW] THE GHOST EFFECT: \" + storageEvents);\r\n    console.log(\"[CW] THE GHOST EFFECT 2: \" + props.eventList);\r\n    //console.log(\"[CW] THE GHOST EFFECTOR: \" + JSON.parse(storageEvents));\r\n\r\n    if (props.isDataLoaded) {\r\n      console.log(\"[CW] DATA LOADED: \" + props.isDataLoaded);\r\n    } else {\r\n      console.log(\"[CW] DATA NOT LOADED: \" + props.isDataLoaded);\r\n    }\r\n\r\n\r\n    /*if (dataLoaded && eventList != \"\" && eventList != [] && eventList != undefined && eventList != null) {\r\n      console.log(\"[CW] DATA LOADED! \" + eventList);\r\n      \r\n    } else if (eventList != \"\" && eventList != [] && eventList != undefined && eventList != null) {\r\n      //data has loaded, re-render page\r\n      console.log(\"[CW] EVENTS LOADED: \" + eventList);\r\n      //savedEvents = storageEvents;\r\n      dispatchCalEvent({ type: \"update\", payload: eventList });\r\n      setDataLoaded(true);\r\n      //useForceUpdate(true);\r\n    } else {\r\n      console.log(\"[CW] loading...\");\r\n      dispatchCalEvent({ type: \"update\", payload: eventList });\r\n    };*/\r\n\r\n  }, [savedEvents]);\r\n\r\n  /*useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //localStorage.setItem(\"savedEvents\", getAllEvents());\r\n    console.log(\"[CW] THE PROPS EFFECT\");\r\n  }, [localStorage.getItem(\"savedEvents\")]);*/\r\n\r\n  useEffect(() => {\r\n    savedEvents == null ? console.log(\"[CW] PROPSEFFECT CONDITION EMPTYSTRING [TRUE]: \" + savedEvents) : console.log(\"[CW] PROPSEFFECT CONDITION EMPTYSTRING [FALSE]: \" + savedEvents);\r\n    if (savedEvents != null){\r\n      setLabels((prevLabels) => {\r\n        return [...new Set(savedEvents.map((evt) => evt.event_label))].map(\r\n          (label) => {\r\n            const currentLabel = prevLabels.find(\r\n              (lbl) => lbl.label === label\r\n            );\r\n            return {\r\n              label,\r\n              checked: currentLabel ? currentLabel.checked : true,\r\n            };\r\n          }\r\n        );\r\n      });\r\n    };\r\n\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    if (smallCalendarMonth !== null) {\r\n      setMonthIndex(smallCalendarMonth);\r\n    }\r\n  }, [smallCalendarMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!showEventModal) {\r\n      setSelectedEvent(null);\r\n    }\r\n  }, [showEventModal]);\r\n\r\n  function updateLabel(label) {\r\n    setLabels(\r\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        monthIndex,\r\n        setMonthIndex,\r\n        smallCalendarMonth,\r\n        setSmallCalendarMonth,\r\n        daySelected,\r\n        setDaySelected,\r\n        showEventModal,\r\n        setShowEventModal,\r\n        dataLoaded,\r\n        setDataLoaded,\r\n        dispatchCalEvent,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n        savedEvents,\r\n        setLabels,\r\n        labels,\r\n        updateLabel,\r\n        filteredEvents,\r\n      }}\r\n    >\r\n      {props.children}\r\n      {props.isDataLoaded}\r\n    </GlobalContext.Provider>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}