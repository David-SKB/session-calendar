{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\index.js\";\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport React, { useContext, useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nimport api from './services/api';\nvar _useState = useState([]),\n  _useState2 = _slicedToArray(_useState, 2),\n  eventList = _useState2[0],\n  getEvents = _useState2[1];\nuseEffect(function () {\n  getAllEvents();\n  console.log(\" LOADING APP EFFECTS...\");\n  console.log(eventList);\n}, []);\nvar getAllEvents = function getAllEvents() {\n  axios.get('http://localhost:8000/events').then(function (response) {\n    var allEvents = response.data;\n    console.log(\"LOADED DATA: \" + allEvents);\n    getEvents(allEvents);\n    console.log(\"COMPLETE TIME: \" + dayjs());\n  }).catch(function (err) {\n    console.log(\"ERROR: \" + err);\n  });\n  console.log(\"LOADED??? \" + eventList);\n};\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ContextWrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["axios","dayjs","React","useContext","useState","useEffect","ReactDOM","App","reportWebVitals","ContextWrapper","api","eventList","getEvents","getAllEvents","console","log","get","then","response","allEvents","data","catch","err","render","document","getElementById"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport ContextWrapper from \"./context/ContextWrapper\";\r\nimport api from './services/api'\r\n\r\nconst [eventList, getEvents] = useState([]);\r\nuseEffect(() => {\r\n  getAllEvents();\r\n  console.log(\" LOADING APP EFFECTS...\");\r\n  console.log(eventList);\r\n}, []);\r\n\r\nconst getAllEvents = () => {\r\n  axios.get('http://localhost:8000/events')\r\n  .then((response) => {\r\n      const allEvents = response.data\r\n      console.log(\"LOADED DATA: \" + allEvents);\r\n      getEvents(allEvents);\r\n      console.log(\"COMPLETE TIME: \" + dayjs());\r\n  })\r\n  .catch(function(err) {\r\n      console.log(\"ERROR: \" + err); \r\n  });\r\nconsole.log(\"LOADED??? \" + eventList);\r\n}; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextWrapper>\r\n      <App />\r\n    </ContextWrapper>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,GAAG,MAAM,gBAAgB;AAAA,gBAEDN,QAAQ,CAAC,EAAE,CAAC;EAAA;EAApCO,SAAS;EAAEC,SAAS;AAC3BP,SAAS,CAAC,YAAM;EACdQ,YAAY,EAAE;EACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;AACxB,CAAC,EAAE,EAAE,CAAC;AAEN,IAAME,YAAY,GAAG,SAAfA,YAAY,GAAS;EACzBb,KAAK,CAACgB,GAAG,CAAC,8BAA8B,CAAC,CACxCC,IAAI,CAAC,UAACC,QAAQ,EAAK;IAChB,IAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI;IAC/BN,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGI,SAAS,CAAC;IACxCP,SAAS,CAACO,SAAS,CAAC;IACpBL,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGd,KAAK,EAAE,CAAC;EAC5C,CAAC,CAAC,CACDoB,KAAK,CAAC,UAASC,GAAG,EAAE;IACjBR,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGO,GAAG,CAAC;EAChC,CAAC,CAAC;EACJR,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGJ,SAAS,CAAC;AACrC,CAAC;AAEDL,QAAQ,CAACiB,MAAM,eACb,oBAAC,KAAK,CAAC,UAAU;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACf,oBAAC,cAAc;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACb,oBAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,CACQ,CACA,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;;AAED;AACA;AACA;AACAjB,eAAe,EAAE"},"metadata":{},"sourceType":"module"}