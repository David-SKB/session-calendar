{"ast":null,"code":"import React from \"react\";\nvar GlobalContext = React.createContext({\n  monthIndex: 0,\n  setMonthIndex: function setMonthIndex(index) {},\n  smallCalendarMonth: 0,\n  setSmallCalendarMonth: function setSmallCalendarMonth(index) {},\n  daySelected: null,\n  setDaySelected: function setDaySelected(day) {},\n  eventStartSelected: null,\n  setEventStartSelected: function setEventStartSelected(eventStart) {},\n  eventEndSelected: null,\n  setEventEndSelected: function setEventEndSelected(eventEnd) {},\n  showEventModal: false,\n  setShowEventModal: function setShowEventModal() {},\n  dispatchCalEvent: function dispatchCalEvent(_ref) {\n    var type = _ref.type,\n      payload = _ref.payload;\n  },\n  savedEvents: [],\n  selectedEvent: null,\n  setSelectedEvent: function setSelectedEvent() {},\n  setLabels: function setLabels() {},\n  labels: [],\n  updateLabel: function updateLabel() {},\n  filteredEvents: []\n});\nexport default GlobalContext;","map":{"version":3,"names":["React","GlobalContext","createContext","monthIndex","setMonthIndex","index","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","day","eventStartSelected","setEventStartSelected","eventStart","eventEndSelected","setEventEndSelected","eventEnd","showEventModal","setShowEventModal","dispatchCalEvent","type","payload","savedEvents","selectedEvent","setSelectedEvent","setLabels","labels","updateLabel","filteredEvents"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/context/GlobalContext.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst GlobalContext = React.createContext({\r\n  monthIndex: 0,\r\n  setMonthIndex: (index) => {},\r\n  smallCalendarMonth: 0,\r\n  setSmallCalendarMonth: (index) => {},\r\n  daySelected: null,\r\n  setDaySelected: (day) => {},\r\n  eventStartSelected: null,\r\n  setEventStartSelected: (eventStart) => {},\r\n  eventEndSelected: null,\r\n  setEventEndSelected: (eventEnd) => {},\r\n  showEventModal: false,\r\n  setShowEventModal: () => {},\r\n  dispatchCalEvent: ({ type, payload }) => {},\r\n  savedEvents: [],\r\n  selectedEvent: null,\r\n  setSelectedEvent: () => {},\r\n  setLabels: () => {},\r\n  labels: [],\r\n  updateLabel: () => {},\r\n  filteredEvents: [],\r\n  \r\n});\r\n\r\nexport default GlobalContext;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,aAAa,GAAGD,KAAK,CAACE,aAAa,CAAC;EACxCC,UAAU,EAAE,CAAC;EACbC,aAAa,EAAE,uBAACC,KAAK,EAAK,CAAC,CAAC;EAC5BC,kBAAkB,EAAE,CAAC;EACrBC,qBAAqB,EAAE,+BAACF,KAAK,EAAK,CAAC,CAAC;EACpCG,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAE,wBAACC,GAAG,EAAK,CAAC,CAAC;EAC3BC,kBAAkB,EAAE,IAAI;EACxBC,qBAAqB,EAAE,+BAACC,UAAU,EAAK,CAAC,CAAC;EACzCC,gBAAgB,EAAE,IAAI;EACtBC,mBAAmB,EAAE,6BAACC,QAAQ,EAAK,CAAC,CAAC;EACrCC,cAAc,EAAE,KAAK;EACrBC,iBAAiB,EAAE,6BAAM,CAAC,CAAC;EAC3BC,gBAAgB,EAAE,gCAAuB;IAAA,IAApBC,IAAI,QAAJA,IAAI;MAAEC,OAAO,QAAPA,OAAO;EAAQ,CAAC;EAC3CC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,4BAAM,CAAC,CAAC;EAC1BC,SAAS,EAAE,qBAAM,CAAC,CAAC;EACnBC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,uBAAM,CAAC,CAAC;EACrBC,cAAc,EAAE;AAElB,CAAC,CAAC;AAEF,eAAe3B,aAAa"},"metadata":{},"sourceType":"module"}