{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\Main.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getMonth } from \"./util\";\n//import { getTheme, getThemeClass } from \"./util\";\nimport CalendarHeader from \"./components/CalendarHeader\";\nimport Sidebar from \"./components/Sidebar\";\nimport Month from \"./components/Month\";\nimport GlobalContext from \"./context/GlobalContext\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nimport App from \"./App\";\nimport EventModal from \"./components/EventModal\";\nimport './themes.css';\nimport { getAllEvents, getAllEvents2 } from \"./services/EventService\";\nimport dayjs from \"dayjs\";\nimport axios from 'axios';\n\n/*function useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment 👆🏻 the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}*/\n\nfunction Main() {\n  //const [currenMonth, setCurrentMonth] = useState(getMonth());\n  var _useContext = useContext(GlobalContext),\n    monthIndex = _useContext.monthIndex,\n    showEventModal = _useContext.showEventModal,\n    dataLoaded = _useContext.dataLoaded,\n    setDataLoaded = _useContext.setDataLoaded,\n    eventList = _useContext.eventList,\n    getEvents = _useContext.getEvents; //const themeColor = getTheme();\n  //const themeClass = getThemeClass();\n  //const forceUpdate = useForceUpdate();\n  getAllEvents().then(function (response) {\n    var allEvents = response.data;\n    localStorage.setItem(\"savedEvents\", JSON.stringify(allEvents));\n    getEvents(allEvents);\n    setDataLoaded(true);\n    console.log(\"[ES] COMPLETE TIME: \" + dayjs());\n  });\n  useEffect(function () {\n    //setDataLoaded(true);\n    console.log(\"[MAIN] DATA LOADED IN MAIN: \" + dataLoaded);\n    //dataLoaded ? forceUpdate():console.log(\"[APP] loading in app...\");\n  }, [dataLoaded]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, showEventModal && /*#__PURE__*/React.createElement(EventModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(ContextWrapper, {\n    isDataLoaded: dataLoaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n}\nexport default Main;","map":{"version":3,"names":["React","useState","useContext","useEffect","getMonth","CalendarHeader","Sidebar","Month","GlobalContext","ContextWrapper","App","EventModal","getAllEvents","getAllEvents2","dayjs","axios","Main","monthIndex","showEventModal","dataLoaded","setDataLoaded","eventList","getEvents","then","response","allEvents","data","localStorage","setItem","JSON","stringify","console","log"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/Main.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { getMonth } from \"./util\";\r\n//import { getTheme, getThemeClass } from \"./util\";\r\nimport CalendarHeader from \"./components/CalendarHeader\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Month from \"./components/Month\";\r\nimport GlobalContext from \"./context/GlobalContext\";\r\nimport ContextWrapper from \"./context/ContextWrapper\";\r\nimport App from \"./App\";\r\nimport EventModal from \"./components/EventModal\";\r\nimport './themes.css';\r\nimport { getAllEvents, getAllEvents2 } from \"./services/EventService\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from 'axios';\r\n\r\n/*function useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment 👆🏻 the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}*/\r\n\r\nfunction Main() {\r\n  //const [currenMonth, setCurrentMonth] = useState(getMonth());\r\n  const { monthIndex, showEventModal, dataLoaded, setDataLoaded, eventList, getEvents } = useContext(GlobalContext);\r\n  //const themeColor = getTheme();\r\n  //const themeClass = getThemeClass();\r\n  //const forceUpdate = useForceUpdate();\r\n\r\n  getAllEvents().then((response) => {\r\n    const allEvents = response.data\r\n    localStorage.setItem(\"savedEvents\", JSON.stringify(allEvents));\r\n    getEvents(allEvents);\r\n    setDataLoaded(true);\r\n    console.log(\"[ES] COMPLETE TIME: \" + dayjs());\r\n});\r\n\r\n  useEffect(() => {\r\n    //setDataLoaded(true);\r\n    console.log(\"[MAIN] DATA LOADED IN MAIN: \" + dataLoaded);\r\n    //dataLoaded ? forceUpdate():console.log(\"[APP] loading in app...\");\r\n  }, [dataLoaded]);\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showEventModal && <EventModal />}\r\n      <ContextWrapper isDataLoaded={dataLoaded}>\r\n        <App />\r\n      </ContextWrapper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,QAAQ;AACjC;AACA,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,cAAc;AACrB,SAASC,YAAY,EAAEC,aAAa,QAAQ,yBAAyB;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAI,GAAG;EACd;EAAA,kBACwFd,UAAU,CAACM,aAAa,CAAC;IAAzGS,UAAU,eAAVA,UAAU;IAAEC,cAAc,eAAdA,cAAc;IAAEC,UAAU,eAAVA,UAAU;IAAEC,aAAa,eAAbA,aAAa;IAAEC,SAAS,eAATA,SAAS;IAAEC,SAAS,eAATA,SAAS,EACnF;EACA;EACA;EAEAV,YAAY,EAAE,CAACW,IAAI,CAAC,UAACC,QAAQ,EAAK;IAChC,IAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI;IAC/BC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC;IAC9DH,SAAS,CAACG,SAAS,CAAC;IACpBL,aAAa,CAAC,IAAI,CAAC;IACnBW,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGlB,KAAK,EAAE,CAAC;EACjD,CAAC,CAAC;EAEAX,SAAS,CAAC,YAAM;IACd;IACA4B,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGb,UAAU,CAAC;IACxD;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAIhB,oBACE,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACZD,cAAc,iBAAI,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACjC,oBAAC,cAAc;IAAC,YAAY,EAAEC,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvC,oBAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACQ,CACF;AAErB;AAEA,eAAeH,IAAI"},"metadata":{},"sourceType":"module"}