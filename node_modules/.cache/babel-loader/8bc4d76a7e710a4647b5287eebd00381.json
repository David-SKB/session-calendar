{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\context\\\\ContextWrapper.js\";\nimport React, { useContext, useState, useEffect, useReducer, useMemo } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\n//import { getAllEvents } from \"../services/EventService\";\nimport dayjs from \"dayjs\";\nimport axios from 'axios';\nimport Day from \"../components/Day\";\n//import api from \"../services/api\";\n\nfunction savedEventsReducer(state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  console.log(\"[CW] STATE: \" + state);\n  console.log(\"[CW] TYPE: \" + type);\n  console.log(\"[CW] PAYLOAD: \" + payload);\n  switch (type) {\n    case \"push\":\n      return [].concat(_toConsumableArray(state), [payload]);\n    case \"update\":\n      return state.map(function (evt) {\n        return evt.id === payload.id ? payload : evt;\n      });\n    case \"load\":\n      return payload;\n    case \"delete\":\n      return state.filter(function (evt) {\n        return evt.id !== payload.id;\n      });\n    default:\n      throw new Error();\n  }\n}\nfunction loadData() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    event_list = _useState2[0],\n    setEvents = _useState2[1];\n  useEffect(function () {\n    setEvents(function (event_list) {\n      return event_list;\n    });\n  }, []); // <- add empty brackets here\n\n  return {\n    event_list: event_list\n  };\n}\n\n/*function loadedEventsReducer(state, { type, payload }) {\r\n  return getAllEvents();\r\n}*/\n\nfunction useForceUpdate() {\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    value = _useState4[0],\n    setValue = _useState4[1]; // integer state\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  }; // update state to force render\n  // An function that increment 👆🏻 the previous state like here \n  // is better than directly setting `value + 1`\n}\n\nexport default function ContextWrapper(props) {\n  var _useState5 = useState(dayjs().month()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    monthIndex = _useState6[0],\n    setMonthIndex = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    smallCalendarMonth = _useState8[0],\n    setSmallCalendarMonth = _useState8[1];\n  var _useState9 = useState(dayjs()),\n    _useState10 = _slicedToArray(_useState9, 2),\n    daySelected = _useState10[0],\n    setDaySelected = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showEventModal = _useState12[0],\n    setShowEventModal = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedEvent = _useState14[0],\n    setSelectedEvent = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    labels = _useState16[0],\n    setLabels = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    dataLoaded = _useState18[0],\n    setDataLoaded = _useState18[1]; //const [forceUpdate, useForceUpdate] = useState(false);\n  //const forceUpdate = useForceUpdate();\n  //const [event_list, setsavedEvents] = useState([]);\n  //const [loadedEvents, dispatchCalEvent2] = useState([]);\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    savedEvents = _useState20[0],\n    dispatchCalEvent = _useState20[1];\n  /*const [savedEvents, dispatchCalEvent] = useReducer(\r\n    savedEventsReducer,\r\n    [],\r\n    initEvents\r\n  );*/\n  var _useContext = useContext(GlobalContext),\n    setsavedEvents = _useContext.setsavedEvents; //const [savedEvents, initEvents] = useState([], );\n  var filteredEvents = useMemo(function () {\n    //console.log(\"SAVED EVENTS \" + JSON.stringify(savedEvents));\n    //console.log(labels);\n    //console.log(\"LOADED EVENTS \" + allEvents);\n    if (!eventList) {\n      return [];\n    }\n    console.log(\"[CW] FILTERED EVENTS UPDATER\");\n    return eventList.filter(function (evt) {\n      return labels.filter(function (lbl) {\n        return lbl.checked;\n      }).map(function (lbl) {\n        return lbl.label;\n      }).includes(evt.event_label);\n    });\n  }, [eventList, labels]);\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    eventList = _useState22[0],\n    getEvents = _useState22[1];\n  useEffect(function () {\n    getAllEvents();\n    console.log(\"[CW] LOADING APP EFFECTS...\");\n    console.log(eventList);\n  }, []);\n  useEffect(function () {\n    console.log(\"[CW] EVENTLIST UPDATED: \" + eventList);\n  }, [eventList]);\n  var getAllEvents = function getAllEvents() {\n    axios.get('http://localhost:8000/events').then(function (response) {\n      var allEvents = JSON.stringify(response.data);\n      console.log(\"[CW] LOADED DATA: \" + allEvents);\n      getEvents(allEvents);\n      console.log(\"[CW] COMPLETE TIME: \" + dayjs());\n    }).catch(function (err) {\n      console.log(\"ERROR: \" + err);\n    });\n    console.log(\"[CW] LOADED??? \" + eventList);\n  };\n  useEffect(function () {\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    var storageEvents = localStorage.getItem(\"savedEvents\");\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n    //dispatchCalEvent({ type: \"load\", payload: storageEvents });\n    console.log(\"[CW] THE GHOST EFFECT: \" + storageEvents);\n    console.log(\"[CW] THE GHOST EFFECTOR: \" + JSON.parse(storageEvents));\n    if (dataLoaded && eventList) {\n      console.log(\"[CW] DATA LOADED!\");\n    } else if (eventList) {\n      //data has loaded, re-render page\n      console.log(\"[CW] EVENTS LOADED\");\n      //savedEvents = storageEvents;\n      dispatchCalEvent({\n        type: \"update\",\n        payload: eventList\n      });\n      setDataLoaded(true);\n      //useForceUpdate(true);\n    } else {\n      console.log(\"[CW] loading...\");\n      dispatchCalEvent({\n        type: \"update\",\n        payload: eventList\n      });\n    }\n    ;\n  }, [savedEvents]);\n  useEffect(function () {\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\n    //localStorage.setItem(\"savedEvents\", getAllEvents());\n    console.log(\"[CW] THE PROPS EFFECT\");\n  }, [localStorage.getItem(\"savedEvents\")]);\n  useEffect(function () {\n    setLabels(function (prevLabels) {\n      return _toConsumableArray(new Set(savedEvents.map(function (evt) {\n        return evt.event_label;\n      }))).map(function (label) {\n        var currentLabel = prevLabels.find(function (lbl) {\n          return lbl.label === label;\n        });\n        return {\n          label: label,\n          checked: currentLabel ? currentLabel.checked : true\n        };\n      });\n    });\n  }, [savedEvents]);\n  useEffect(function () {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n  useEffect(function () {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n  function updateLabel(label) {\n    setLabels(labels.map(function (lbl) {\n      return lbl.label === label.label ? label : lbl;\n    }));\n  }\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      monthIndex: monthIndex,\n      setMonthIndex: setMonthIndex,\n      smallCalendarMonth: smallCalendarMonth,\n      setSmallCalendarMonth: setSmallCalendarMonth,\n      daySelected: daySelected,\n      setDaySelected: setDaySelected,\n      showEventModal: showEventModal,\n      setShowEventModal: setShowEventModal,\n      dataLoaded: dataLoaded,\n      setDataLoaded: setDataLoaded,\n      dispatchCalEvent: dispatchCalEvent,\n      selectedEvent: selectedEvent,\n      setSelectedEvent: setSelectedEvent,\n      savedEvents: savedEvents,\n      setLabels: setLabels,\n      labels: labels,\n      updateLabel: updateLabel,\n      filteredEvents: filteredEvents\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"names":["React","useContext","useState","useEffect","useReducer","useMemo","GlobalContext","dayjs","axios","Day","savedEventsReducer","state","type","payload","console","log","map","evt","id","filter","Error","loadData","event_list","setEvents","useForceUpdate","value","setValue","ContextWrapper","props","month","monthIndex","setMonthIndex","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","selectedEvent","setSelectedEvent","labels","setLabels","dataLoaded","setDataLoaded","savedEvents","dispatchCalEvent","setsavedEvents","filteredEvents","eventList","lbl","checked","label","includes","event_label","getEvents","getAllEvents","get","then","response","allEvents","JSON","stringify","data","catch","err","storageEvents","localStorage","getItem","parse","prevLabels","Set","currentLabel","find","updateLabel","children"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/context/ContextWrapper.js"],"sourcesContent":["import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useMemo,\r\n} from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\n//import { getAllEvents } from \"../services/EventService\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from 'axios';\r\nimport Day from \"../components/Day\";\r\n//import api from \"../services/api\";\r\n\r\nfunction savedEventsReducer(state, { type, payload }) {\r\n  console.log(\"[CW] STATE: \" + state);\r\n  console.log(\"[CW] TYPE: \" + type);\r\n  console.log(\"[CW] PAYLOAD: \" + payload);\r\n  switch (type) {\r\n    case \"push\":\r\n      return [...state, payload];\r\n    case \"update\":\r\n      return state.map((evt) =>\r\n        evt.id === payload.id ? payload : evt\r\n      );\r\n      case \"load\":\r\n        return payload;\r\n    case \"delete\":\r\n      return state.filter((evt) => evt.id !== payload.id);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction loadData() {\r\n  const [event_list, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setEvents((event_list) => event_list);\r\n \r\n  }, []); // <- add empty brackets here\r\n  \r\n  return {event_list};\r\n}\r\n\r\n\r\n/*function loadedEventsReducer(state, { type, payload }) {\r\n  return getAllEvents();\r\n}*/\r\n\r\n\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment 👆🏻 the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}\r\n\r\nexport default function ContextWrapper(props) {\r\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\r\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\r\n  const [daySelected, setDaySelected] = useState(dayjs());\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [labels, setLabels] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  //const [forceUpdate, useForceUpdate] = useState(false);\r\n  //const forceUpdate = useForceUpdate();\r\n  //const [event_list, setsavedEvents] = useState([]);\r\n  //const [loadedEvents, dispatchCalEvent2] = useState([]);\r\n  const [savedEvents, dispatchCalEvent] = useState([]);\r\n  /*const [savedEvents, dispatchCalEvent] = useReducer(\r\n    savedEventsReducer,\r\n    [],\r\n    initEvents\r\n  );*/\r\n  const {\r\n    setsavedEvents,\r\n  } = useContext(GlobalContext);\r\n  //const [savedEvents, initEvents] = useState([], );\r\n\r\n  const filteredEvents = useMemo(() => {\r\n    //console.log(\"SAVED EVENTS \" + JSON.stringify(savedEvents));\r\n    //console.log(labels);\r\n    //console.log(\"LOADED EVENTS \" + allEvents);\r\n    if (!eventList) {\r\n      return [];\r\n    }\r\n    console.log(\"[CW] FILTERED EVENTS UPDATER\");\r\n    return eventList.filter((evt) =>\r\n      labels\r\n        .filter((lbl) => lbl.checked)\r\n        .map((lbl) => lbl.label)\r\n        .includes(evt.event_label)\r\n    );\r\n  }, [eventList, labels]);\r\n\r\n  const [eventList, getEvents] = useState([]);\r\n  useEffect(() => {\r\n    getAllEvents();\r\n    console.log(\"[CW] LOADING APP EFFECTS...\");\r\n    console.log(eventList);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"[CW] EVENTLIST UPDATED: \" + eventList);\r\n  }, [eventList]);\r\n\r\n  const getAllEvents = () => {\r\n    axios.get('http://localhost:8000/events')\r\n    .then((response) => {\r\n        const allEvents = JSON.stringify(response.data);\r\n        console.log(\"[CW] LOADED DATA: \" + allEvents);\r\n        getEvents(allEvents);\r\n        console.log(\"[CW] COMPLETE TIME: \" + dayjs());\r\n    })\r\n    .catch(function(err) {\r\n        console.log(\"ERROR: \" + err); \r\n    });\r\n  console.log(\"[CW] LOADED??? \" + eventList);\r\n  }; \r\n\r\n  useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    const storageEvents = localStorage.getItem(\"savedEvents\");\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //dispatchCalEvent({ type: \"load\", payload: storageEvents });\r\n    console.log(\"[CW] THE GHOST EFFECT: \" + storageEvents);\r\n    console.log(\"[CW] THE GHOST EFFECTOR: \" + JSON.parse(storageEvents));\r\n    \r\n    if (dataLoaded && eventList) {\r\n      console.log(\"[CW] DATA LOADED!\");\r\n      \r\n    } else if (eventList) {\r\n      //data has loaded, re-render page\r\n      console.log(\"[CW] EVENTS LOADED\");\r\n      //savedEvents = storageEvents;\r\n      dispatchCalEvent({ type: \"update\", payload: eventList });\r\n      setDataLoaded(true);\r\n      //useForceUpdate(true);\r\n    } else {\r\n      console.log(\"[CW] loading...\");\r\n      dispatchCalEvent({ type: \"update\", payload: eventList });\r\n    };\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(getAllEvents()));\r\n    //localStorage.setItem(\"savedEvents\", getAllEvents());\r\n    console.log(\"[CW] THE PROPS EFFECT\");\r\n  }, [localStorage.getItem(\"savedEvents\")]);\r\n\r\n  useEffect(() => {\r\n    setLabels((prevLabels) => {\r\n      return [...new Set(savedEvents.map((evt) => evt.event_label))].map(\r\n        (label) => {\r\n          const currentLabel = prevLabels.find(\r\n            (lbl) => lbl.label === label\r\n          );\r\n          return {\r\n            label,\r\n            checked: currentLabel ? currentLabel.checked : true,\r\n          };\r\n        }\r\n      );\r\n    });\r\n  }, [savedEvents]);\r\n\r\n  useEffect(() => {\r\n    if (smallCalendarMonth !== null) {\r\n      setMonthIndex(smallCalendarMonth);\r\n    }\r\n  }, [smallCalendarMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!showEventModal) {\r\n      setSelectedEvent(null);\r\n    }\r\n  }, [showEventModal]);\r\n\r\n  function updateLabel(label) {\r\n    setLabels(\r\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        monthIndex,\r\n        setMonthIndex,\r\n        smallCalendarMonth,\r\n        setSmallCalendarMonth,\r\n        daySelected,\r\n        setDaySelected,\r\n        showEventModal,\r\n        setShowEventModal,\r\n        dataLoaded,\r\n        setDataLoaded,\r\n        dispatchCalEvent,\r\n        selectedEvent,\r\n        setSelectedEvent,\r\n        savedEvents,\r\n        setLabels,\r\n        labels,\r\n        updateLabel,\r\n        filteredEvents,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}