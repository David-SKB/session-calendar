{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\Main.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getMonth } from \"./util\";\n//import { getTheme, getThemeClass } from \"./util\";\nimport CalendarHeader from \"./components/CalendarHeader\";\nimport Sidebar from \"./components/Sidebar\";\nimport Month from \"./components/Month\";\nimport GlobalContext from \"./context/GlobalContext\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nimport App from \"./App\";\nimport EventModal from \"./components/EventModal\";\nimport './themes.css';\nimport { getAllEvents, getAllEvents2 } from \"./services/EventService\";\nimport dayjs from \"dayjs\";\nimport axios from 'axios';\nfunction useForceUpdate() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1]; // integer state\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  }; // update state to force render\n  // An function that increment üëÜüèª the previous state like here \n  // is better than directly setting `value + 1`\n}\n\nfunction DataLoaded(props) {\n  var _useContext = useContext(GlobalContext),\n    showEventModal = _useContext.showEventModal,\n    dataLoaded = _useContext.dataLoaded,\n    setDataLoaded = _useContext.setDataLoaded,\n    eventList = _useContext.eventList,\n    getEvents = _useContext.getEvents;\n  console.log(\"[MAIN] PENDING DATA UPDATE \" + props.isDataLoaded);\n  if (props) {\n    console.log(\"[MAIN] DATA LOADED I THINK\" + eventList);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, showEventModal && /*#__PURE__*/React.createElement(EventModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(ContextWrapper, {\n      eventList: eventList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })));\n  }\n  console.log(\"[MAIN] DATA NOT LOOKIN GOOD BREV\" + eventList);\n  return null;\n}\nfunction Main(props) {\n  //const [currenMonth, setCurrentMonth] = useState(getMonth());\n  var _useContext2 = useContext(GlobalContext),\n    monthIndex = _useContext2.monthIndex,\n    showEventModal = _useContext2.showEventModal,\n    dataLoaded = _useContext2.dataLoaded,\n    setDataLoaded = _useContext2.setDataLoaded,\n    eventList = _useContext2.eventList,\n    getEvents = _useContext2.getEvents; //const themeColor = getTheme();\n  //const themeClass = getThemeClass();\n  //const forceUpdate = useForceUpdate();\n  getAllEvents().then(function (response) {\n    var allEvents = response;\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(allEvents));\n    getEvents(allEvents);\n    setDataLoaded(true);\n    //forceUpdate();\n    console.log(\"[MAIN] EVENTS LOADED.THEN: \" + dataLoaded + \" \" + dayjs() + \" \" + allEvents);\n  });\n  console.log(\"[MAIN] EVENTS FINISHED LOADING \" + dayjs() + \" \" + dataLoaded);\n  useEffect(function () {\n    //setDataLoaded(true);\n    console.log(\"[MAIN] DATA LOADED IN MAIN.EFFECT: \" + dataLoaded);\n    //dataLoaded ? forceUpdate():console.log(\"[APP] loading in app...\");\n  }, [dataLoaded]);\n  return /*#__PURE__*/React.createElement(DataLoaded, {\n    isDataLoaded: dataLoaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  });\n}\nexport default Main;","map":{"version":3,"names":["React","useState","useContext","useEffect","getMonth","CalendarHeader","Sidebar","Month","GlobalContext","ContextWrapper","App","EventModal","getAllEvents","getAllEvents2","dayjs","axios","useForceUpdate","value","setValue","DataLoaded","props","showEventModal","dataLoaded","setDataLoaded","eventList","getEvents","console","log","isDataLoaded","Main","monthIndex","then","response","allEvents"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/Main.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { getMonth } from \"./util\";\r\n//import { getTheme, getThemeClass } from \"./util\";\r\nimport CalendarHeader from \"./components/CalendarHeader\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Month from \"./components/Month\";\r\nimport GlobalContext from \"./context/GlobalContext\";\r\nimport ContextWrapper from \"./context/ContextWrapper\";\r\nimport App from \"./App\";\r\nimport EventModal from \"./components/EventModal\";\r\nimport './themes.css';\r\nimport { getAllEvents, getAllEvents2 } from \"./services/EventService\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from 'axios';\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update state to force render\r\n  // An function that increment üëÜüèª the previous state like here \r\n  // is better than directly setting `value + 1`\r\n}\r\n\r\nfunction DataLoaded(props) {\r\n  const { showEventModal, dataLoaded, setDataLoaded, eventList, getEvents } = useContext(GlobalContext);\r\n  console.log(\"[MAIN] PENDING DATA UPDATE \" + props.isDataLoaded);\r\n  if (props) {\r\n    console.log(\"[MAIN] DATA LOADED I THINK\" + eventList);\r\n    return (\r\n      <React.Fragment>\r\n        {showEventModal && <EventModal />}\r\n        <ContextWrapper eventList = {eventList}>\r\n          <App />\r\n        </ContextWrapper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  console.log(\"[MAIN] DATA NOT LOOKIN GOOD BREV\" + eventList);\r\n  return (\r\n    null\r\n  );\r\n}\r\n\r\nfunction Main(props) {\r\n  //const [currenMonth, setCurrentMonth] = useState(getMonth());\r\n  const { monthIndex, showEventModal, dataLoaded, setDataLoaded, eventList, getEvents } = useContext(GlobalContext);\r\n  //const themeColor = getTheme();\r\n  //const themeClass = getThemeClass();\r\n  //const forceUpdate = useForceUpdate();\r\n\r\n  getAllEvents().then((response) => {\r\n    const allEvents = response\r\n    //localStorage.setItem(\"savedEvents\", JSON.stringify(allEvents));\r\n    getEvents(allEvents);\r\n    setDataLoaded(true);\r\n    //forceUpdate();\r\n    console.log(\"[MAIN] EVENTS LOADED.THEN: \" + dataLoaded + \" \" + dayjs() + \" \" + allEvents);\r\n});\r\nconsole.log(\"[MAIN] EVENTS FINISHED LOADING \" + dayjs() + \" \" + dataLoaded);\r\n\r\n  useEffect(() => {\r\n    //setDataLoaded(true);\r\n    console.log(\"[MAIN] DATA LOADED IN MAIN.EFFECT: \" + dataLoaded);\r\n    //dataLoaded ? forceUpdate():console.log(\"[APP] loading in app...\");\r\n  }, [dataLoaded]);\r\n\r\n\r\n\r\n  return (\r\n    <DataLoaded isDataLoaded = {dataLoaded}/>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}