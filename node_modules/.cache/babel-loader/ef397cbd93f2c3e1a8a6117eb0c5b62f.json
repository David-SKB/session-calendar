{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\PROJECT BELCAVE\\\\Mini_Projects\\\\studio_calendar\\\\frontend\\\\session-calendar\\\\src\\\\App.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getMonth } from \"./util\";\n//import { getTheme, getThemeClass } from \"./util\";\nimport CalendarHeader from \"./components/CalendarHeader\";\nimport Sidebar from \"./components/Sidebar\";\nimport Month from \"./components/Month\";\nimport GlobalContext from \"./context/GlobalContext\";\nimport EventModal from \"./components/EventModal\";\nimport './themes.css';\nfunction App(props) {\n  var _useState = useState(getMonth()),\n    _useState2 = _slicedToArray(_useState, 2),\n    currenMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var _useContext = useContext(GlobalContext),\n    monthIndex = _useContext.monthIndex,\n    showEventModal = _useContext.showEventModal;\n  if (props.isDataLoaded) {\n    console.log(\"[APP] PROPS DATA: \" + props.isDataLoaded + \" \" + props.reloadData + \" \" + props.setReloadData + \" \" + props.eventList);\n  }\n  //const themeColor = getTheme();\n  //const themeClass = getThemeClass();\n  //const forceUpdate = useForceUpdate();\n  //const [eventList, getEvents] = useState([]);\n  useEffect(function () {\n    setCurrentMonth(getMonth(monthIndex));\n  }, [monthIndex]);\n  useEffect(function () {\n    if (true) {\n      console.log(\"[APP] RELOAD DATA.EFFECT: \" + reloadData);\n    }\n  }, [props.reloadData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, showEventModal && /*#__PURE__*/React.createElement(EventModal, {\n    reloadData: props.reloadData,\n    setReloadData: props.setReloadData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-screen flex flex-col theme-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CalendarHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), props.isDataLoaded && /*#__PURE__*/React.createElement(Month, {\n    month: currenMonth,\n    isDataLoaded: props.isDataLoaded,\n    eventList: props.eventList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useContext","useEffect","getMonth","CalendarHeader","Sidebar","Month","GlobalContext","EventModal","App","props","currenMonth","setCurrentMonth","monthIndex","showEventModal","isDataLoaded","console","log","reloadData","setReloadData","eventList"],"sources":["C:/Users/David/Documents/PROJECT BELCAVE/Mini_Projects/studio_calendar/frontend/session-calendar/src/App.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { getMonth } from \"./util\";\r\n//import { getTheme, getThemeClass } from \"./util\";\r\nimport CalendarHeader from \"./components/CalendarHeader\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Month from \"./components/Month\";\r\nimport GlobalContext from \"./context/GlobalContext\";\r\nimport EventModal from \"./components/EventModal\";\r\nimport './themes.css';\r\n\r\nfunction App(props) {\r\n  const [currenMonth, setCurrentMonth] = useState(getMonth());\r\n  const { monthIndex, showEventModal } = useContext(GlobalContext);\r\n  if (props.isDataLoaded) {\r\n  console.log(\"[APP] PROPS DATA: \" + props.isDataLoaded  + \" \" + props.reloadData  + \" \" + props.setReloadData + \" \" + props.eventList);\r\n  }\r\n  //const themeColor = getTheme();\r\n  //const themeClass = getThemeClass();\r\n  //const forceUpdate = useForceUpdate();\r\n  //const [eventList, getEvents] = useState([]);\r\n  useEffect(() => {\r\n    setCurrentMonth(getMonth(monthIndex));\r\n  }, [monthIndex]);\r\n\r\n  useEffect(() => {\r\n    if (true) {\r\n      console.log(\"[APP] RELOAD DATA.EFFECT: \" + reloadData);\r\n    }\r\n  }, [props.reloadData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showEventModal && <EventModal reloadData={props.reloadData} setReloadData={props.setReloadData}/>}\r\n\r\n      <div className={\"h-screen flex flex-col theme-red\"}>\r\n        <CalendarHeader />\r\n        <div className=\"flex flex-1\">\r\n          <Sidebar />\r\n          {props.isDataLoaded && <Month month={currenMonth} isDataLoaded={props.isDataLoaded} eventList={props.eventList}/>}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,QAAQ;AACjC;AACA,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,cAAc;AAErB,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA,gBACqBV,QAAQ,CAACG,QAAQ,EAAE,CAAC;IAAA;IAApDQ,WAAW;IAAEC,eAAe;EAAA,kBACIX,UAAU,CAACM,aAAa,CAAC;IAAxDM,UAAU,eAAVA,UAAU;IAAEC,cAAc,eAAdA,cAAc;EAClC,IAAIJ,KAAK,CAACK,YAAY,EAAE;IACxBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGP,KAAK,CAACK,YAAY,GAAI,GAAG,GAAGL,KAAK,CAACQ,UAAU,GAAI,GAAG,GAAGR,KAAK,CAACS,aAAa,GAAG,GAAG,GAAGT,KAAK,CAACU,SAAS,CAAC;EACrI;EACA;EACA;EACA;EACA;EACAlB,SAAS,CAAC,YAAM;IACdU,eAAe,CAACT,QAAQ,CAACU,UAAU,CAAC,CAAC;EACvC,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBX,SAAS,CAAC,YAAM;IACd,IAAI,IAAI,EAAE;MACRc,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGC,UAAU,CAAC;IACxD;EACF,CAAC,EAAE,CAACR,KAAK,CAACQ,UAAU,CAAC,CAAC;EAEtB,oBACE,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACZJ,cAAc,iBAAI,oBAAC,UAAU;IAAC,UAAU,EAAEJ,KAAK,CAACQ,UAAW;IAAC,aAAa,EAAER,KAAK,CAACS,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAElG;IAAK,SAAS,EAAE,kCAAmC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjD,oBAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAClB;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1B,oBAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACVT,KAAK,CAACK,YAAY,iBAAI,oBAAC,KAAK;IAAC,KAAK,EAAEJ,WAAY;IAAC,YAAY,EAAED,KAAK,CAACK,YAAa;IAAC,SAAS,EAAEL,KAAK,CAACU,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAC7G,CACF,CACS;AAErB;AAEA,eAAeX,GAAG"},"metadata":{},"sourceType":"module"}